#!/bin/bash

# Retrieve ngrok tunnel URL and set alexa skill endpoint to that URL
#
# Author: mr1e14
#
# Input:
# $1 - ask-cli user profile
# $2 - alexa skill ID
# $3 - url path to skill logic (optional)

if [[ ! $1 || ! $2 ]]; then
	echo -e  "Usage: set_endpoint ask-profile skill-id [path]\n"
	echo  "Examples: "
	echo "set_endpoint default amzn1.ask.skil.9213a-4324-6m32... "
	echo -e  "set_endpoint myprofile amzn1.ask.skil.9213a-4324-6m32... url/to/skill\n "
	echo "Use the [path] option to set the URL to wherever your skill listens for requests. Leave it if it listens on homepage."
	exit 1
fi

profile=$1
skillId=$2
path=$3

# get url

attempt=0
max_attempts=5

while [[ ! $url ]] && [[ attempt -lt  max_attempts ]]
do	
	if [[ $attempt > 0 ]]; then
		echo "Did not find url at $attempt attempt"
		sleep 5
		echo "Retrying..."
	fi

	tunnels="curl -s 127.0.0.1:4040/api/tunnels"
	url="$($tunnels | jq '.tunnels[] | .public_url ' -r )"
	attempt=$((attempt + 1))
done

if [[ ! $url ]]; then
	echo "Failed to retrieve ngrok URL."
	exit 2
fi

url="$url/$path"
echo "ngrok url: $url"

# download skill schema and replace URI

ASK="/home/pi/.npm_global/bin/ask"
get_schema="$ASK api get-skill -p $profile -s $skillId"

schema_dir=~/projects/ask_cli
schema_file=$schema_dir/schema.json

echo "Downloading old schema..."

schema_json="$($get_schema | jq --arg url "$url" '.manifest.apis.custom.endpoint.uri |= $url ')"

if [[ ! $schema_json ]]; then
	echo "Failed to download schema"
	exit 3
fi

echo $schema_json > $schema_file

# upload
echo "Uploading new schema..."
$ASK api update-skill -p $profile -s $skillId -f $schema_file
echo "Done."

